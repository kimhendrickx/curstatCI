% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{ComputeConfIntervals}
\alias{ComputeConfIntervals}
\title{Pointwise Confidence Intervals under Current Status data}
\usage{
ComputeConfIntervals(data, x, alpha)
}
\arguments{
\item{data}{Dataframe with three variables:
\describe{
    \item{t}{Observation points t sorted in ascending order. All observations need to be positive. The total number of unique observation points equals \code{length(t)}.}
    \item{freq1}{Frequency of observation t satisfying \eqn{x \le t}.
                  The total number of observations with censoring indicator \eqn{\delta =1} equals \code{sum(freq1)}. }
    \item{freq2}{Frequency of observation t. The sample size equals \code{sum(freq2)}. If no tied observations are present in the data \code{length(t)} equals \code{sum(freq2)}. }
}}

\item{x}{numeric vector}

\item{alpha}{confidence level of pointwise confidence intervals}
}
\value{
List with 4 variables:

\enumerate{
    \item{MLE }{ Maximum Likelihood Estimator}
    \item{SMLE }{ Smoothed Maximum Likelihood Estimator in x }
    \item{h }{ data-driven bandwidth choice for each point in x}
    \item{CI }{ pointwise confidence interval for each points in x}
}
}
\description{
The function ComputeConfIntervals computes pointwise confidence intervals for the distribution function under current status data.
The confidence intervals are based on the Smoothed Maximum likelihood Estimator and constructed using the nonparametric bootstrap.
}
\details{
In the current status model, the variable of interest \eqn{X} with distribution function \eqn{F} is not observed directly.
A censoring variable \eqn{T} is observed instead together with the indicator \eqn{\Delta = (X \le T)}.
ComputeConfIntervals computes the pointwise \code{1-alpha} bootstrap confidence intervals around the SMLE of \eqn{F} based on a sample of size \code{n <- sum(data$freq2)} from the observable random  vector \eqn{(T, \Delta)}.
The bandwidth used for estimating the SMLE at a point in the vector x is obtained by minimizing the pointwise Mean Squared Error using the subsampling pricinciple in combination with undersmoothing.
}
\examples{
library(Rcpp)
library(curstatCI)

# sample size
n <- 1000

# Uniform data  U(0,2)
set.seed(2)
y <- runif(n,0,2)
t <- runif(n,0,2)
delta <- as.numeric(y <= t)

A<-cbind(t[order(t)], delta[order(t)], rep(1,n))
grid<-seq(0,2 ,by = 0.01)

# pointwise confidence intervals at grid points:
out<-ComputeConfIntervals(data = A,x =grid,alpha = 0.05)

left <- out$CI[,1]
right <- out$CI[,2]

plot(grid, out$SMLE,type ='l', ylim=c(0,1), main= "",ylab="",xlab="",las=1)
lines(grid, left, col = 4)
lines(grid, right, col = 4)
segments(grid,left, grid, right)

}
\references{
The nonparametric bootstrap for the current status model, Groeneboom, P. and Hendrickx, K. Electronical Journal of Statistics (2017)
}
\seealso{
\code{vignette("curstatCI")}
}
